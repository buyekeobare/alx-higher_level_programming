================================
A guide on how to use ``2-matrix_divided`` module
================================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage ``matrix_divided``
------------------------

``matrix_divided(...)`` returns a new matrix that is a copy of the parameter
``matrix`` with all elements divided by ``div``.

Import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Lets test it:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([["Hello", "Buyeke"], [6, 7]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2], [3, 4]], "Hello")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided("Hello", 9)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 2], [3, 4]], -2)
    [[-0.5, -1.0], [-1.5, -2.0]]

    >>> matrix_divided([[1, 2], [3, 4]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix = [[1, 2, 3]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0]]
    >>> print(matrix)
    [[1, 2, 3]]

    >>> matrix_divided([[3, 4]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
